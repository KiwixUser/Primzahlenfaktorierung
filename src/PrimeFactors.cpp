#include <stdio.h>
#include <stdlib.h>
#include <intrin.h>
#include <Windows.h>

using u8  = unsigned __int8;
using u16 = unsigned __int16;
using u64 = unsigned __int64;

static constexpr u8 Peri1 = 2*3*5*7;
static constexpr u8 Tab1[] =
{
    // 48 out of 210
    1, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97,101,103,107,109,113,121,127,131,137,139,143,149,151,157,163,167,169,173,179,181,187,191,193,197,199,209,
};

static constexpr u16 Peri2 = 2*3*5*7*11*13;
static constexpr u16 Tab2[] =
{
    // 5760 out of 30030
    #include "primefactors.h"
};

struct u128
{
   u64 lo = 0;
   u64 hi = 0;
};

static u128 mult (u64 x, u64 y)
{
    u128 ret;
    ret.lo  = ::_umul128 (x, y, & ret.hi);
    return ret;
}

static u128 mult (u128 x, u64 y)
{
    u128 ret;
    ret.lo  = ::_umul128 (x.lo, y, & ret.hi);
    u64 dummy;
    ret.hi += ::_umul128 (x.hi, y, & dummy);
    return ret;
}

static u128 add  (u128 x, u64 y)
{
    u128 ret;
    u8 cy = ::_addcarry_u64( 0, x.lo, y, &ret.lo);
            ::_addcarry_u64(cy, x.hi, 0, &ret.hi);
    return ret;
}

static u64 mod_128 (u128 x, u64 y)
{
    u64  rem = 0;
    ::_udiv128 (rem, x.hi, y, &rem);
    ::_udiv128 (rem, x.lo, y, &rem);
    return rem;
}

static u64 mod_96  (u128 x, u64 y)
{
    u64  rem = 0;
    ::_udiv128 (x.hi, x.lo, y, &rem);
    return rem;
}

static u128 div  (u128 x, u64 y)
{
    u128 ret;
    u64  rem = 0;
    ret.hi = ::_udiv128 (rem, x.hi, y, &rem);
    ret.lo = ::_udiv128 (rem, x.lo, y, &rem);
    return ret;
}

static u128 ReadNo (char const* p)
{
    u128 x;
    while (*p >= '0' && *p <= '9') 
    {
        x = mult(x, 10);
        x = add (x, *p++ - '0');
    }
    return x;
}

void Print (u128 no, char const* post = "", char const* pre = "")
{
    ::printf ("%s", pre);

    char number[40];
    char* p = number;
    do
    {
        *p++ = ::mod_128 (no, 10);
        no = ::div (no, 10);
    }
    while (no.lo || no.hi);

    while (p > number)
    {
        ::printf ("%u", *--p);
        if (p > number && (p-number) % 3 == 0)
            ::printf (".");
    }
    ::printf ("%s", post);
}

static void Check_96 (u128 & no, u64 n)
{
    if (::mod_96 (no, n))
        return;

    int i = 0;
    do
    {
        no = ::div (no, n);
        i++;
    }
    while (::mod_128 (no, n) == 0);

    if (i == 1) ::printf (" %llu *"   , n);
    else        ::printf (" %llu^%d *", n, i);
}

static void Check_128 (u128 & no, u64 n)
{
    if (::mod_128 (no, n))
        return;

    int i = 0;
    do
    {
        no = ::div (no, n);
        i++;
    }
    while (::mod_128 (no, n) == 0);

    if (i == 1) ::printf (" %llu *"   , n);
    else        ::printf (" %llu^%d *", n, i);
}

static void Test (u128 no)
{
    ::Print (no, " =");
    ::Check_128 (no, 2);

    for (u64 x = 3; x < Peri1; x += 2)
        ::Check_128 (no, x);

    for (u64 x = Peri1; x < Peri2; x += Peri1)
    {
        u128 const m = ::mult (x+Tab1[0], x+Tab1[0]);
        if (m.hi >  no.hi) break;
        if (m.hi == no.hi && m.lo > no.lo) break;

        if (no.hi >= x)
            for (int i = 0; i < sizeof(Tab1)/sizeof(*Tab1); i++)
                ::Check_128 (no, x + Tab1[i]);
        else
            for (int i = 0; i < sizeof(Tab2)/sizeof(*Tab2); i++)
                ::Check_96  (no, x + Tab1[i]);
    }

    for (u64 x = Peri2; ; x += Peri2)
    {
        u128 const m = ::mult (x+Tab2[0], x+Tab2[0]);
        if (m.hi >  no.hi) break;
        if (m.hi == no.hi && m.lo > no.lo) break;

        if (no.hi >= x)
            for (int i = 0; i < sizeof(Tab2)/sizeof(*Tab2); i++)
                ::Check_128 (no, x + Tab2[i]);
        else
            for (int i = 0; i < sizeof(Tab2)/sizeof(*Tab2); i++)
                ::Check_96  (no, x + Tab2[i]);
    }
    if (no.lo != 1 || no.hi != 0)
        Print (no, "\n", " ");
    else
        printf ("\b \n");
}

int main (int argc, char** argv)
{
    DWORD const t1 = ::GetTickCount();
    switch (argc)
    {
    case 1: 
        {
        u128 no = ::ReadNo ("18361375334787046697");
        for (int i = 0; i <= 1550; i++)
            ::Test (no),
            no = add (no, 1);
        }
        break;
    case 2:
        {
        u128 const no = ::ReadNo (argv[1]);
        ::Test (no);
        }
        break;
    case 3:
        {
        u128 no  = ::ReadNo (argv[1]);
        int  cnt = atoi (argv[2]);
        for (int i = 0; i <= cnt; i++)
            ::Test (no), no = add (no, 1);
        }
        break;
    default:
        for (int i = 1; i < argc; i++)
        {
            u128 const no = ::ReadNo (argv[i]);
            ::Test (no);
        }
        break;
    }
    DWORD  const t2 = ::GetTickCount();
    double const dT = 0.001*(t2-t1);
    ::fprintf (stdout, "\n%8.3f sec\n", dT);
    ::fprintf (stderr, "\n%8.3f sec\n", dT);
    return 0;
}

/*
61.256.345.608.934.067.954 = 2 * 3 * 10.209.390.934.822.344.659
61.256.345.608.934.067.955 = 5 * 11 * 59 * 50671 * 128591 * 2.897.119
61.256.345.608.934.067.956 = 2^2 * 7^2 * 13 * 71 * 5657 * 237071 * 252.481
61.256.345.608.934.067.957 = 3 * 239 * 527099 * 162.083.847.179
61.256.345.608.934.067.958 = 2 * 271 * 113.019.087.839.361.749
61.256.345.608.934.067.959 = 719 * 3485947 * 24.440.011.963
61.256.345.608.934.067.960 = 2^3 * 3^2 * 5 * 6080689 * 27.983.097.899
61.256.345.608.934.067.961 = 2347 * 6336571 * 4.118.923.153
61.256.345.608.934.067.962 = 2 * 223 * 17524667 * 7.837.299.641
61.256.345.608.934.067.963 = 3 * 7 * 17 * 701279 * 244.676.373.121
61.256.345.608.934.067.964 = 2^2 * 431 * 1373 * 130199 * 198.763.043
61.256.345.608.934.067.965 = 5 * 31 * 1289 * 306.595.988.933.327
61.256.345.608.934.067.966 = 2 * 3 * 11 * 19 * 199 * 245.471.158.058.771
61.256.345.608.934.067.967 = 43 * 374955463 * 3.799.294.363
61.256.345.608.934.067.968 = 2^8 * 23 * 10.403.591.305.865.161
61.256.345.608.934.067.969 = 3^3 * 13 * 47 * 79 * 389 * 120.828.509.267
61.256.345.608.934.067.970 = 2 * 5 * 7 * 1006979 * 869.025.721.049
61.256.345.608.934.067.971 = 6257 * 9.790.050.440.935.603
61.256.345.608.934.067.972 = 2^2 * 3 * 5.104.695.467.411.172.331
61.256.345.608.934.067.973 = 29 * 2.112.287.779.618.416.137
61.256.345.608.934.067.974 = 2 * 163 * 43973 * 4.273.142.624.813
61.256.345.608.934.067.975 = 3 * 5^2 * 40493 * 102587 * 196.615.403
61.256.345.608.934.067.976 = 2^3 * 73 * 39749 * 182041 * 14.495.821
61.256.345.608.934.067.977 = 7 * 11 * 20143 * 39.494.462.391.907
61.256.345.608.934.067.978 = 2 * 3^2 * 41 * 859037 * 96.623.519.513
61.256.345.608.934.067.979 = 198827 * 308.088.668.082.977
61.256.345.608.934.067.980 = 2^2 * 5 * 17 * 180.165.722.379.217.847
61.256.345.608.934.067.981 = 3 * 20.418.781.869.644.689.327
61.256.345.608.934.067.982 = 2 * 13 * 181 * 7229 * 1.800.615.303.043
61.256.345.608.934.067.983 = 70309 * 871.244.728.397.987
61.256.345.608.934.067.984 = 2^4 * 3 * 7 * 182.310.552.407.541.869
61.256.345.608.934.067.985 = 5 * 19 * 37 * 1013 * 17.203.480.109.623
61.256.345.608.934.067.986 = 2 * 2851 * 10.742.957.840.921.443
61.256.345.608.934.067.987 = 3^2 * 53 * 1237 * 6599 * 15.732.034.037
61.256.345.608.934.067.988 = 2^2 * 11 * 722093 * 1.927.992.201.739
61.256.345.608.934.067.989 = 887203 * 69.044.340.031.463
61.256.345.608.934.067.990 = 2 * 3 * 5 * 3851 * 4478647 * 118.388.489
61.256.345.608.934.067.991 = 7 * 23 * 103 * 479 * 1794893 * 4.296.491
61.256.345.608.934.067.992 = 2^3 * 7.657.043.201.116.758.499
61.256.345.608.934.067.993 = 3 * 647 * 709 * 208141 * 213.856.117
61.256.345.608.934.067.994 = 2 * 3711833 * 8.251.495.367.509
61.256.345.608.934.067.995 = 5 * 13 * 65881 * 395023 * 36.212.221
61.256.345.608.934.067.996 = 2^2 * 3^4 * 31 * 6.098.799.841.590.409
61.256.345.608.934.067.997 = 17 * 2311 * 622889 * 2.503.176.979
61.256.345.608.934.067.998 = 2 * 7 * 151 * 28.976.511.640.933.807
61.256.345.608.934.067.999 = 3 * 11 * 1913 * 970.336.067.559.031
61.256.345.608.934.068.000 = 2^5 * 5^3 * 643 * 396709 * 60.035.491
61.256.345.608.934.068.001 = 604007 * 101.416.615.385.143
61.256.345.608.934.068.002 = 2 * 3 * 29 * 2237 * 16553 * 9.507.342.443
61.256.345.608.934.068.003 = 911 * 35443729 * 1.897.113.437
61.256.345.608.934.068.004 = 2^2 * 19 * 18376027 * 43.861.741.577
61.256.345.608.934.068.005 = 3^2 * 5 * 7^2 * 1871 * 14.848.025.443.591
61.256.345.608.934.068.006 = 2 * 359 * 319427 * 267.088.394.471
61.256.345.608.934.068.007 = 83 * 457 * 119311 * 13.535.562.427
61.256.345.608.934.068.008 = 2^3 * 3 * 13 * 11059 * 17.753.362.967.201
61.256.345.608.934.068.009 = 241 * 254.175.707.920.888.249
61.256.345.608.934.068.010 = 2 * 5 * 11 * 43 * 67601 * 431311 * 444.167
61.256.345.608.934.068.011 = 3 * 67 * 3169 * 96.168.487.962.419
61.256.345.608.934.068.012 = 2^2 * 7 * 2.187.726.628.890.502.429
61.256.345.608.934.068.013 = 61 * 89 * 70459 * 160.138.135.483
61.256.345.608.934.068.014 = 2 * 3^2 * 17 * 23 * 59 * 401201 * 367.695.067
61.256.345.608.934.068.015 = 5 * 1001933 * 12.227.633.106.991
61.256.345.608.934.068.016 = 2^4 * 47 * 167004659 * 487.758.287
61.256.345.608.934.068.017 = 3 * 1487 * 8863 * 118927 * 13.027.397
61.256.345.608.934.068.018 = 2 * 30.628.172.804.467.034.009
61.256.345.608.934.068.019 = 7 * 41 * 213.436.744.282.000.237
61.256.345.608.934.068.020 = 2^2 * 3 * 5 * 149 * 40511729 * 169.134.727
61.256.345.608.934.068.021 = 11^2 * 13 * 313 * 1783 * 69.779.311.663
61.256.345.608.934.068.022 = 2 * 37 * 1511 * 547.841.465.370.473
61.256.345.608.934.068.023 = 3^3 * 19 * 119.408.081.109.033.271
61.256.345.608.934.068.024 = 2^3 * 15544411 * 492.591.401.573
61.256.345.608.934.068.025 = 5^2 * 4822967 * 508.038.687.463
61.256.345.608.934.068.026 = 2 * 3 * 7 * 1.458.484.419.260.334.953
61.256.345.608.934.068.027 = 31 * 71 * 229 * 121.533.375.279.863
61.256.345.608.934.068.028 = 2^2 * 2903 * 5.275.262.281.168.969
61.256.345.608.934.068.029 = 3 * 139 * 8799701 * 16.693.488.937
61.256.345.608.934.068.030 = 2 * 5 * 97 * 383 * 164.884.782.667.853
61.256.345.608.934.068.031 = 17 * 29 * 13679 * 1209311 * 7.511.243
61.256.345.608.934.068.032 = 2^6 * 3^2 * 11 * 101 * 167 * 573.189.295.061
61.256.345.608.934.068.033 = 7 * 8.750.906.515.562.009.719
61.256.345.608.934.068.034 = 2 * 13 * 8817689 * 267.191.697.581
61.256.345.608.934.068.035 = 3 * 5 * 8059 * 506.732.395.325.591
61.256.345.608.934.068.036 = 2^2 * 15.314.086.402.233.517.009
61.256.345.608.934.068.037 = 23 * 2.663.319.374.301.481.219
61.256.345.608.934.068.038 = 2 * 3 * 107 * 587 * 1433 * 5413 * 20.955.293
61.256.345.608.934.068.039 = 419 * 571 * 256.035.952.538.711
61.256.345.608.934.068.040 = 2^3 * 5 * 7 * 53 * 4.127.786.092.246.231
61.256.345.608.934.068.041 = 3^2 * 130087 * 52.320.836.234.327
61.256.345.608.934.068.042 = 2 * 19^2 * 113 * 24793 * 30.283.520.629
61.256.345.608.934.068.043 = 11 * 5.568.758.691.721.278.913
61.256.345.608.934.068.044 = 2^2 * 3 * 5.104.695.467.411.172.337
61.256.345.608.934.068.045 = 5 * 127 * 108709 * 887.384.540.363
61.256.345.608.934.068.046 = 2 * 179 * 3041341 * 56.260.416.257
61.256.345.608.934.068.047 = 3 * 7 * 13 * 227 * 4788481 * 206.426.197
61.256.345.608.934.068.048 = 2^4 * 17 * 79 * 22573 * 126.289.082.327
61.256.345.608.934.068.049 = 73 * 173 * 4.850.450.994.451.981
61.256.345.608.934.068.050 = 2 * 3^3 * 5^2 * 109199 * 426541 * 974.177
      92.265 sec


61.256.345.608.934.067.954 = 2 * 3 * 10.209.390.934.822.344.659
61.256.345.608.934.067.955 = 5 * 11 * 59 * 50671 * 128591 * 2.897.119
61.256.345.608.934.067.956 = 2^2 * 7^2 * 13 * 71 * 5657 * 237071 * 252.481
61.256.345.608.934.067.957 = 3 * 239 * 527099 * 162.083.847.179
61.256.345.608.934.067.958 = 2 * 271 * 113.019.087.839.361.749
61.256.345.608.934.067.959 = 719 * 3485947 * 24.440.011.963
61.256.345.608.934.067.960 = 2^3 * 3^2 * 5 * 6080689 * 27.983.097.899
61.256.345.608.934.067.961 = 2347 * 6336571 * 4.118.923.153
61.256.345.608.934.067.962 = 2 * 223 * 17524667 * 7.837.299.641
61.256.345.608.934.067.963 = 3 * 7 * 17 * 701279 * 244.676.373.121
61.256.345.608.934.067.964 = 2^2 * 431 * 1373 * 130199 * 198.763.043
61.256.345.608.934.067.965 = 5 * 31 * 1289 * 306.595.988.933.327
61.256.345.608.934.067.966 = 2 * 3 * 11 * 19 * 199 * 245.471.158.058.771
61.256.345.608.934.067.967 = 43 * 374955463 * 3.799.294.363
61.256.345.608.934.067.968 = 2^8 * 23 * 10.403.591.305.865.161
61.256.345.608.934.067.969 = 3^3 * 13 * 47 * 79 * 389 * 120.828.509.267
61.256.345.608.934.067.970 = 2 * 5 * 7 * 1006979 * 869.025.721.049
61.256.345.608.934.067.971 = 6257 * 9.790.050.440.935.603
61.256.345.608.934.067.972 = 2^2 * 3 * 5.104.695.467.411.172.331
61.256.345.608.934.067.973 = 29 * 2.112.287.779.618.416.137
61.256.345.608.934.067.974 = 2 * 163 * 43973 * 4.273.142.624.813
61.256.345.608.934.067.975 = 3 * 5^2 * 40493 * 102587 * 196.615.403
61.256.345.608.934.067.976 = 2^3 * 73 * 39749 * 182041 * 14.495.821
61.256.345.608.934.067.977 = 7 * 11 * 20143 * 39.494.462.391.907
61.256.345.608.934.067.978 = 2 * 3^2 * 41 * 859037 * 96.623.519.513
61.256.345.608.934.067.979 = 198827 * 308.088.668.082.977
61.256.345.608.934.067.980 = 2^2 * 5 * 17 * 180.165.722.379.217.847
61.256.345.608.934.067.981 = 3 * 20.418.781.869.644.689.327
61.256.345.608.934.067.982 = 2 * 13 * 181 * 7229 * 1.800.615.303.043
61.256.345.608.934.067.983 = 70309 * 871.244.728.397.987
61.256.345.608.934.067.984 = 2^4 * 3 * 7 * 182.310.552.407.541.869
61.256.345.608.934.067.985 = 5 * 19 * 37 * 1013 * 17.203.480.109.623
61.256.345.608.934.067.986 = 2 * 2851 * 10.742.957.840.921.443
61.256.345.608.934.067.987 = 3^2 * 53 * 1237 * 6599 * 15.732.034.037
61.256.345.608.934.067.988 = 2^2 * 11 * 722093 * 1.927.992.201.739
61.256.345.608.934.067.989 = 887203 * 69.044.340.031.463
61.256.345.608.934.067.990 = 2 * 3 * 5 * 3851 * 4478647 * 118.388.489
61.256.345.608.934.067.991 = 7 * 23 * 103 * 479 * 1794893 * 4.296.491
61.256.345.608.934.067.992 = 2^3 * 7.657.043.201.116.758.499
61.256.345.608.934.067.993 = 3 * 647 * 709 * 208141 * 213.856.117
61.256.345.608.934.067.994 = 2 * 3711833 * 8.251.495.367.509
61.256.345.608.934.067.995 = 5 * 13 * 65881 * 395023 * 36.212.221
61.256.345.608.934.067.996 = 2^2 * 3^4 * 31 * 6.098.799.841.590.409
61.256.345.608.934.067.997 = 17 * 2311 * 622889 * 2.503.176.979
61.256.345.608.934.067.998 = 2 * 7 * 151 * 28.976.511.640.933.807
61.256.345.608.934.067.999 = 3 * 11 * 1913 * 970.336.067.559.031
61.256.345.608.934.068.000 = 2^5 * 5^3 * 643 * 396709 * 60.035.491
61.256.345.608.934.068.001 = 604007 * 101.416.615.385.143
61.256.345.608.934.068.002 = 2 * 3 * 29 * 2237 * 16553 * 9.507.342.443
61.256.345.608.934.068.003 = 911 * 35443729 * 1.897.113.437
61.256.345.608.934.068.004 = 2^2 * 19 * 18376027 * 43.861.741.577
61.256.345.608.934.068.005 = 3^2 * 5 * 7^2 * 1871 * 14.848.025.443.591
61.256.345.608.934.068.006 = 2 * 359 * 319427 * 267.088.394.471
61.256.345.608.934.068.007 = 83 * 457 * 119311 * 13.535.562.427
61.256.345.608.934.068.008 = 2^3 * 3 * 13 * 11059 * 17.753.362.967.201
61.256.345.608.934.068.009 = 241 * 254.175.707.920.888.249
61.256.345.608.934.068.010 = 2 * 5 * 11 * 43 * 67601 * 431311 * 444.167
61.256.345.608.934.068.011 = 3 * 67 * 3169 * 96.168.487.962.419
61.256.345.608.934.068.012 = 2^2 * 7 * 2.187.726.628.890.502.429
61.256.345.608.934.068.013 = 61 * 89 * 70459 * 160.138.135.483
61.256.345.608.934.068.014 = 2 * 3^2 * 17 * 23 * 59 * 401201 * 367.695.067
61.256.345.608.934.068.015 = 5 * 1001933 * 12.227.633.106.991
61.256.345.608.934.068.016 = 2^4 * 47 * 167004659 * 487.758.287
61.256.345.608.934.068.017 = 3 * 1487 * 8863 * 118927 * 13.027.397
61.256.345.608.934.068.018 = 2 * 30.628.172.804.467.034.009
61.256.345.608.934.068.019 = 7 * 41 * 213.436.744.282.000.237
61.256.345.608.934.068.020 = 2^2 * 3 * 5 * 149 * 40511729 * 169.134.727
61.256.345.608.934.068.021 = 11^2 * 13 * 313 * 1783 * 69.779.311.663
61.256.345.608.934.068.022 = 2 * 37 * 1511 * 547.841.465.370.473
61.256.345.608.934.068.023 = 3^3 * 19 * 119.408.081.109.033.271
61.256.345.608.934.068.024 = 2^3 * 15544411 * 492.591.401.573
61.256.345.608.934.068.025 = 5^2 * 4822967 * 508.038.687.463
61.256.345.608.934.068.026 = 2 * 3 * 7 * 1.458.484.419.260.334.953
61.256.345.608.934.068.027 = 31 * 71 * 229 * 121.533.375.279.863
61.256.345.608.934.068.028 = 2^2 * 2903 * 5.275.262.281.168.969
61.256.345.608.934.068.029 = 3 * 139 * 8799701 * 16.693.488.937
61.256.345.608.934.068.030 = 2 * 5 * 97 * 383 * 164.884.782.667.853
61.256.345.608.934.068.031 = 17 * 29 * 13679 * 1209311 * 7.511.243
61.256.345.608.934.068.032 = 2^6 * 3^2 * 11 * 101 * 167 * 573.189.295.061
61.256.345.608.934.068.033 = 7 * 8.750.906.515.562.009.719
61.256.345.608.934.068.034 = 2 * 13 * 8817689 * 267.191.697.581
61.256.345.608.934.068.035 = 3 * 5 * 8059 * 506.732.395.325.591
61.256.345.608.934.068.036 = 2^2 * 15.314.086.402.233.517.009
61.256.345.608.934.068.037 = 23 * 2.663.319.374.301.481.219
61.256.345.608.934.068.038 = 2 * 3 * 107 * 587 * 1433 * 5413 * 20.955.293
61.256.345.608.934.068.039 = 419 * 571 * 256.035.952.538.711
61.256.345.608.934.068.040 = 2^3 * 5 * 7 * 53 * 4.127.786.092.246.231
61.256.345.608.934.068.041 = 3^2 * 130087 * 52.320.836.234.327
61.256.345.608.934.068.042 = 2 * 19^2 * 113 * 24793 * 30.283.520.629
61.256.345.608.934.068.043 = 11 * 5.568.758.691.721.278.913
61.256.345.608.934.068.044 = 2^2 * 3 * 5.104.695.467.411.172.337
61.256.345.608.934.068.045 = 5 * 127 * 108709 * 887.384.540.363
61.256.345.608.934.068.046 = 2 * 179 * 3041341 * 56.260.416.257
61.256.345.608.934.068.047 = 3 * 7 * 13 * 227 * 4788481 * 206.426.197
61.256.345.608.934.068.048 = 2^4 * 17 * 79 * 22573 * 126.289.082.327
61.256.345.608.934.068.049 = 73 * 173 * 4.850.450.994.451.981
61.256.345.608.934.068.050 = 2 * 3^3 * 5^2 * 109199 * 426541 * 974.177
      63.344 sec
*/
